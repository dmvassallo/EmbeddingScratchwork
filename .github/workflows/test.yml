name: Test

on: [push, pull_request, workflow_dispatch]

jobs:
  check-for-api-key:
    name: Check for OpenAI API key
    runs-on: ubuntu-latest
    steps:
      - name: Check OPENAI_API_KEY repository secret
        run: grep -q '^sk-' <<<'${{ secrets.OPENAI_API_KEY }}'

  read-blocking-config:
    name: Read blocking configuration
    runs-on: ubuntu-latest
    outputs:
      use-mutex: ${{ steps.read-blocking-config-variable.outputs.use-mutex }}
    steps:
      - name: Check out source repository
        uses: actions/checkout@v3

      - name: Read TESTS_CI_NONBLOCKING variable
        id: read-blocking-config-variable
        run: |
          # Allowed values: "false" (or "no", "0", ""), "true" (or "yes", "1").
          .github/workflows/get-blocking-config
        env:
          TESTS_CI_NONBLOCKING: ${{ vars.TESTS_CI_NONBLOCKING }}

  tests:
    name: Tests

    needs: [check-for-api-key, read-blocking-config]

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.11', '3.10', '3.9', '3.8']

    runs-on: ${{ matrix.os }}

    permissions:
      contents: write

    defaults:
      run:
        shell: bash -l {0}

    steps:
      - name: Check out source repository
        uses: actions/checkout@v3

      - name: Substitute Python version
        run: |
          perl -i -spwe 's/^ *- python=\K.+$/$pyver/' -- \
              -pyver=${{ matrix.python-version }} environment.yml

      - name: Install Conda environment from environment.yml
        uses: mamba-org/provision-with-micromamba@v15

      - name: Make editable install
        run: pip install -e .

      - name: Print Python version
        run: python -V

      - name: Set up mutex
        if: needs.read-blocking-config.outputs.use-mutex != 'false'
        uses: EliahKagan/actions-mutex@v2

      - name: Run tests
        run: python -m unittest -v
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          TESTS_CACHE_EMBEDDING_CALLS_IN_MEMORY: 'yes'
          TESTS_LOGGING_LEVEL: 'INFO'

  tests-as-scripts:
    name: Tests as scripts

    needs: [check-for-api-key, read-blocking-config]

    runs-on: ubuntu-latest

    permissions:
      contents: write

    defaults:
      run:
        shell: bash -l {0}

    steps:
      - name: Check out source repository
        uses: actions/checkout@v3

      - name: Install Conda environment from environment.yml
        uses: mamba-org/provision-with-micromamba@v15

      - name: Make editable install
        run: pip install -e .

      - name: Set up mutex
        if: needs.read-blocking-config.outputs.use-mutex != 'false'
        uses: EliahKagan/actions-mutex@v2

      - name: Run test modules as scripts
        run: meta/run-test-scripts
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          TESTS_CACHE_EMBEDDING_CALLS_IN_MEMORY: 'no'
          TESTS_LOGGING_LEVEL: 'INFO'
